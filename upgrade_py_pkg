#!/usr/bin/env bash

show_usage() {
    echo 'Usage: upgrade_py_pkg [-u|-l|-g]'
}


if [ $# -gt 1 ]; then
    show_usage
    exit -1
fi


upgrade_user_package() {
    echo "Upgrade $(which python3) USER pip setuptools wheel..."
    python3 -m pip install --upgrade --user pip setuptools wheel
    echo "Upgrade $(which python3) USER pip setuptools wheel...DONE"
    echo

    echo "Upgrade $(which python3) USER packages..."
    python3 -m pip list --user | sed 1,2d | cut -d ' ' -f 1 | xargs python3 -m pip install --upgrade --user
    echo "Upgrade $(which python3) USER packages...DONE"
}


upgrade_local_package() {
    echo "Upgrade $(which python3) LOCAL pip setuptools wheel..."
    python3 -m pip install --upgrade pip setuptools wheel
    echo "Upgrade $(which python3) LOCAL pip setuptools wheel...DONE"
    echo

    echo "Upgrade $(which python3) LOCAL packages..."
    python3 -m pip list --local | sed 1,2d | cut -d ' ' -f 1 | xargs python3 -m pip install --upgrade
    echo "Upgrade $(which python3) LOCAL packages...DONE"
}


upgrade_global_package() {
    echo "Upgrade $(which python3) GLOBAL pip setuptools wheel..."
    python3 -m pip install --upgrade pip setuptools wheel
    echo "Upgrade $(which python3) GLOBAL pip setuptools wheel...DONE"
    echo

    echo "Upgrade $(which python3) GLOBAL packages..."
    python3 -m pip list | sed 1,2d | cut -d ' ' -f 1 | xargs python3 -m pip install --upgrade
    echo "Upgrade $(which python3) GLOBAL packages...DONE"
}


if [ -z "$1" ] || [ "$1" = "-u" ]; then
    upgrade_user_package
elif [ "$1" = "-l" ]; then
    upgrade_local_package
elif [ "$1" = "-g" ]; then
    upgrade_global_package
else
    echo "Unknown option: $1"
    show_usage
    exit -1
fi
